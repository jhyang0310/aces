<div class="filters-sidebar" data-logic="{{ section.settings.and_logic }}" style="display: none;">
  <div class="disp_table">
  <div class="sb-widget d-none d-lg-block">
    <div class="sb-menu">
          
      <h5 class="sb-title">Categories</h5>
      <ul class="categories-menu">       
       {% for link in linklists.categories.links %}
            <li><a href="{{ link.url }}">{{ link.title }}</a></li>
        {% endfor %}
      </ul>
      
    </div>
  </div>
  
  {% assign sizes = '' %}
  {% for product in collection.products %}
    {% for variant in product.variants %}
      {% if variant.available %}
        {% assign sizes = sizes | append: variant.options[0] | append: '_' %}
      {% endif %}
    {% endfor %}
  {% endfor %}

  {% assign sizesArr = sizes | split: '_' | uniq %}
                      
   <div class="clearfix filter">  
     <h5 class="sb-title">Size</h5>
     <select class="sortBydropdown styled-select coll-filter filter size" {% for tag in collection.all_tags %}{% if current_tags contains tag %}data-value="{{ tag }}"{% endif %}{% endfor %}>
       {% for size in sizesArr %}
         {% unless size contains 'Default' %}
           <option value="{{ size }}">{{ size }}</option>
         {% endunless %}
       {% endfor %}
     </select>
     <ul id="selectintoUL"></ul>
   </div>
  </div>
  <script>
      
     /* Product Tag Filters - Good for any number of filters on any type of collection page.
     Give you product tag filter select element a class of coll-filter.
     Give your collection select a class of coll-picker.
     Brought to you by Caroline Schnapp. */
  Shopify.queryParams = {};
  if (location.search.length) {
    for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
      aKeyValue = aCouples[i].split('=');
      if (aKeyValue.length > 1) {
        Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
      }
    }
  }
  jQuery('.coll-picker').change(function() {
   

    if (jQuery(this).val()) {
      location.href = '/collections/' + jQuery(this).val();
    }
    else {
      location.href = '/collections/all';
    }
  });
  var collFilters = jQuery('.coll-filter');
  collFilters.change(function() {
    delete Shopify.queryParams.page;
    var newTags = [];
    collFilters.each(function() {
      if (jQuery(this).val()) {
        newTags.push(jQuery(this).val());
      }
    });
    {% if collection.handle %}
    var newURL = '/collections/{{ collection.handle }}';
    if (newTags.length) {
      newURL += '/' + newTags.join('+');
    }
    var search = jQuery.param(Shopify.queryParams);
    if (search.length) {
      newURL += '?' + search;
    }
    location.href = newURL;
    {% else %}
    if (newTags.length) {
      Shopify.queryParams.constraint = newTags.join('+');
    }
    else {
      delete Shopify.queryParams.constraint;
    }
    location.search = jQuery.param(Shopify.queryParams);
    {% endif %}
  });
    
    
    
    $(document).ready(function(){
      var str = window.location.href;
      var fn = str.split('/').reverse()[0];
    //alert(fn);
                                     
      var dataval = $(".sortBydropdown").attr('data-value');
      //alert(dataval);
        $(".sortBydropdown option").each(function(){
            //$("#selectintoUL").append('<li><a data-value="' + $(this).attr('value') + '" href="/collections/{% if collection.handle.size > 0 %}{{ collection.handle }}{% else %}all{% endif %}/' + $(this).attr('value') + '">' + $(this).html() + '</a></li>');
            $('<li class="{% for tag in collection.all_tags %}{% if current_tags contains tag and collection.handle contains 'Small' %}activetag_{{ tag }} {% endif %}{% endfor %} checkcontainer activesort_' + $(this).attr('value') + '"><a data-value="' + $(this).attr('value') + '" href="/collections/{% if collection.handle.size > 0 %}{{ collection.handle }}{% else %}all{% endif %}/' + $(this).attr('value') + '">' + $(this).html() + '<input type="checkbox" checked="checked"><span class="checkmark"></span></a></li>').addClass('lol').appendTo('#selectintoUL');
         });
        $("#selectintoUL").on("click", "li a", function(e){
            //e.preventDefault();
            $(".sortBydropdown").val($(this).attr("href"));
        });
          $(".sortBydropdown").hide();

            $(".selectintoUL a[data-value='" + dataval + "']").addClass('active-filter');
          
            $("#selectintoUL a[data-value='" + fn + "']").addClass('active-filter');
          
          
    });
    </script>
</div>


<style>
  
/* The container */
.checkcontainer {
  -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  cursor: pointer;
  display: block;
  font-size: 16px;
  margin-bottom: 8px;
  padding-left: 20px;
  position: relative;
}

/* Hide the browser's default checkbox */
.checkcontainer input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

/* Create a custom checkbox */
.checkmark {
  background-color: transparent;
  height: 15px;
  left: 0;
  position: absolute;
  top: 3px;
  width: 15px;border:1px solid #DDDDDD;
}

/* On mouse-over, add a grey background color */
.checkcontainer:hover input ~ .checkmark {
    background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.checkcontainer a.active-filter input:checked ~ .checkmark {
    background-color: #000000;border:1px solid #000;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked 
.checkcontainer a.active-filter input:checked ~ .checkmark::after {
    display: block;
}*/

/* Style the checkmark/indicator */
.checkcontainer .checkmark:after {
    left: 5px;
    top: 2px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}
.filter-sidebar .sbf-title {
  border-bottom: 1px solid;
  display: block;
  font-size: 18px;
  font-weight: 600;
  margin-bottom: 10px;
  margin-top: 30px;
}
.sb-filter .advanced-filters {
  max-height: 220px;
  overflow: auto;
}
.sb-widget.filter-sidebar.no-sidebar.dropdown {
  padding: 0 20px 0 0;
}
.coll_prodbar .grid--view-items {
  border-left: 1px solid #000;
  margin: 0;
  padding-left: 20px;
}
.checkcontainer a.active-filter.advanced-filter.rt > a {
  font-weight: 600;
}

</style>
